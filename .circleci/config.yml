# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    docker:
      # specify the version
      - image: circleci/golang:1.16

      # mysql for test
      - image: circleci/mysql:5.7
        environment:
          MYSQL_DATABASE: "test_yource"
          MYSQL_USER: "circleci"
          MYSQL_PASSWORD: "password"
          MYSQL_ROOT_PASSWORD: "root"
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    working_directory: /go/src/github.com/Diwamoto/yource
    steps:
      - checkout

      # specify any bash command here prefixed with `run: `
      - run:
          # プライマリ コンテナは MySQL ではないため、準備が完了するまで sleep コマンドを実行します。
          name: Wait for mysql
          command: |
            for i in `seq 1 10`;
            do
              nc -z 127.0.0.1 3306 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for MySQL && exit 1
      - run:
          name: Get Go Modules
          command: go mod tidy
          working_directory: /go/src/github.com/Diwamoto/yource/backend
      - run:
          name: Setup Env File
          command: cp .circleci/.env .env &&  echo "export ENV_PATH=/go/src/github.com/Diwamoto/yource/backend/.env" >> $BASH_ENV
          working_directory: /go/src/github.com/Diwamoto/yource/backend
      - run:
          name: Test Go Library
          command: go test ./test/model/... -v -covermode=count -coverprofile=model.out -coverpkg=./model
          working_directory: /go/src/github.com/Diwamoto/yource/backend
  deploy:
    machine:
      image: circleci/classic:edge
    steps:
      - checkout
      # CircleCI に登録した秘密鍵を呼び出す
      - add_ssh_keys:
          fingerprints:
            - "ac:0a:18:9a:69:b9:01:33:88:e2:04:ad:2d:35:50:cb"
      # CircleCI に登録した環境変数を使って SSH
      - run: ssh ubuntu@yource.space 'cd ~/yource && git pull'

# テストが成功した場合のみ、deployを実行するように
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          # mainブランチがpushされた場合のみdeployするようにする。
          filters:
            branches:
              only: main
